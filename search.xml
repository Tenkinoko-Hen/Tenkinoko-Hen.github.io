<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Servlet入门</title>
      <link href="posts/1020.html"/>
      <url>posts/1020.html</url>
      
        <content type="html"><![CDATA[<h1 id="Servlet入门-1"><a href="#Servlet入门-1" class="headerlink" title="Servlet入门-1"></a>Servlet入门-1</h1><h3 id="1-Servlet技术"><a href="#1-Servlet技术" class="headerlink" title="1.Servlet技术"></a>1.Servlet技术</h3><ul><li><p><strong>什么是Servlet</strong></p><ol><li>Servlet 是 JavaEE 规范之一。<strong>规范就是接口</strong></li><li>Servlet 是 JavaWeb 三大组件之一。三大组件分别是：Servlet程序，Filter过滤器,Listener监听器</li><li>Servlet 是运行在服务器上的一个java小程序，它可以接受客户端发送过来的</li></ol><p>请求，并响应给客户端</p></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/12/iii86c.png"></p><blockquote><p>手动实现 <strong>Servlet</strong> 程序</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">/*** service 方法是专门用来处理请求和响应的     * @param servletRequest      * @param servletResponse      * @throws ServletException      * @throws IOException */</span>     <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>                                 System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello Servlet 被访问了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                 <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>web.xml中的配置：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>                                                    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!-- servlet 标签给 Tomcat 配置 Servlet 程序 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!--servlet-name 标签 Servlet 程序起一个别名（一般是类名） --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!--servlet-class 是 Servlet 程序的全类名--></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>com.atguigu.servlet.HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--servlet-mapping 标签给 servlet 程序配置访问地址--></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--servlet-name 标签的作用是告诉服务器，我当前配置的地址给哪个 Servlet 程序使用--></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--url-pattern 标签配置访问地址 &lt;br/> / 斜杠在服务器解析的时候，表示地址为：http://ip:port/工程路径 &lt;br/> /hello 表示地址为：http://ip:port/工程路径/hello &lt;br/> --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>常见的三种错误：</p><ol><li>url-pattern 中配置路径没有以“/“打头</li><li>servlet-name 配置的值不存在</li><li>servlet-class 标签的全类名配置错误</li></ol></blockquote><ul><li><p><strong>Servlet的生命周期</strong></p><ol><li><p>执行 Servlet 构造器方法</p></li><li><p>执行 init 初始化方法</p></li></ol></li></ul><p>第一，二步，是在第一次访问的时候创建 Servlet 程序会调用。</p><ol start="3"><li><p>执行 Service 方法<br>第三步，每次访问都会调用</p></li><li><p>执行 destroy 销毁方法<br>第四步，在web工程停止的时候调用</p></li></ol><ul><li><strong>GET和POST请求的分发处理</strong></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">/*** service 方法是专门用来处理请求和响应的     * @param servletRequest      * @param servletResponse      * @throws ServletException      * @throws IOException      */</span>     <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3 service === Hello Servlet 被访问了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// 类型转换（因为它有 getMethod()方法） </span>        HttpServletRequest httpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span> servletRequest<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// 获取请求的方式 </span>        String method <span class="token operator">=</span> httpServletRequest<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*** 做 get 请求的操作 */</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"get 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"get 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*** 做 post 请求的操作 */</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"post 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"post 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>通过继承 HttpServlet 实现 Servlet程序</strong></li></ul><p>​        一般在实际项目开发中，都是使用继承 HttpServlet 类的方式去实现 Servlet 程序。</p><ol><li> 编写一个类去继承 HttpServlet 类</li><li>根据业务需要重写 doGet 或 doPost 方法</li><li>到web.xml中配置 Servlet 程序的访问地址</li></ol><p>Servlet 类的代码</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>类名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>到这个类的路径地址(**.**.**.类名）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>类名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>自定义标签名（/类名的简写)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>Servlet类的继承体系</strong></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/12/izpel7.png"></p><ul><li><p>**ServletConfig 类 **</p><blockquote><p>ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类。</p><p>Servlet 程序和 SercletConfig 对象都是由 Tomcat 负责创建，我们负责使用。<br>Servlet 程序默认是第一次访问的时候创捷， ServletConfig 是每个 Servlet 程序创建时，&gt;就创建一个对应的 ServletConfig 对象。</p></blockquote></li><li><p><strong>ServletConfig 类的三大作用</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯JAVA C组第十二次省赛总结</title>
      <link href="posts/1012.html"/>
      <url>posts/1012.html</url>
      
        <content type="html"><![CDATA[<h1 id="第十二届蓝桥杯省赛总结"><a href="#第十二届蓝桥杯省赛总结" class="headerlink" title="第十二届蓝桥杯省赛总结"></a>第十二届蓝桥杯省赛总结</h1><p>​        为能更好的为比赛做准备，作出总结！</p><h5 id="关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：https-blog-csdn-net-GD-ONE-article-details-104061907"><a href="#关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：https-blog-csdn-net-GD-ONE-article-details-104061907" class="headerlink" title="关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：https://blog.csdn.net/GD_ONE/article/details/104061907"></a>关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：<a href="https://blog.csdn.net/GD_ONE/article/details/104061907">https://blog.csdn.net/GD_ONE/article/details/104061907</a></h5><p>​        此总结给出练习题目的建议。</p><h2 id="一、洛谷题单"><a href="#一、洛谷题单" class="headerlink" title="一、洛谷题单"></a>一、洛谷题单</h2><p>​        洛谷推荐提单包含了从基础至进阶的题目，很有新手练至高手的价值。在这些提单中，重要的便是找到自己所不会的、不懂的进而练习，将各个知识点掌握。毕竟蓝桥杯比赛不是靠赌去猜题，同考试一样，唯有绝对的实力才能让自己游刃有余，我也建议每个学生做到这些，包括我自身。<strong>因此，建议通读上面链接的知识点，以此排查自己不会的或需加强锻炼的方面。</strong>以下以java为例子给出经验。</p><h2 id="二、练习方向"><a href="#二、练习方向" class="headerlink" title="二、练习方向"></a>二、练习方向</h2><p>​        首先，是最基础的语法问题，这是必要的，不需多说，看知识点即可。个人觉得java语法方面可注意自定义类的空值问题，即便是数组new出了数组的大小，此时每个元素也仍然是空值，因此数组需注意每个元素需要new出对象进行赋值。</p><p>​        学完了语法，我们仍然需要了解java各个常用实用的类，因为自己不可能还会将这些数据结构写一遍，在了解这些类之前，建议先了解数据结构的链表。因为很多数据结构都以链表基础发展过来，打个比喻，编程语言的语法是数学中的点，链表是线，通过线又能画出各种平面图形，其实很多其他数据结构都是链表的另外一种形式，个人认为树还处于一个复杂的平面结构，则图达到了立体的效果。</p><p>​        在了解了链表的基础上，可以通过刷相应的题来熟悉库中的类了，并在练习过程中会了解到其使用到的数据结构和算法，以此综合学习，我会根据上面链接的知识点慢慢<del>（摸鱼）</del>更新这方面的题目。可能会创个博客，又或直接挂洛谷的个人博客。</p><p>​        学完以上，便需要将其学精，能灵活运用各种算法和数据结构，这就需要刷更多的题了（你已经是个成熟的刷题人了，要学会自己找题）。</p><p>​        蓝桥杯C组省赛着重基础，因此参加省赛前基础是要学精的，不然估计省一无了，国赛未参加，不议。</p><p>​        通过这次的省赛，二叉树、图论是我的薄弱环节<del>（烂透，一题没做成）</del>，着重加强这两个数据结构的学习，其他算法和数据结构也不精，学完数据结构<del>（怪我寒假不认真，该补的还是要补回来）</del>，再各方面学精。</p><h2 id="三、学习建议"><a href="#三、学习建议" class="headerlink" title="三、学习建议"></a>三、学习建议</h2><p>​        练题目，不应是为AC而AC，而是从中掌握其知识点。学习时不能逞强，不会便是不会，直奔题解，还不懂直接问人，切忌硬刚题目，30分钟没思路直奔题解或问人，敲出自己的想法还不行也同样。记住，并非人人都是天才，我们是在学习，该不会的就去寻求帮助，学习他人，拓展自己的思路，闭门造车不可行。</p><p>​        </p><h1 id="题目练习篇-例子"><a href="#题目练习篇-例子" class="headerlink" title="题目练习篇(例子)"></a>题目练习篇(例子)</h1><h2 id="一、加速幂"><a href="#一、加速幂" class="headerlink" title="一、加速幂"></a>一、加速幂</h2><p>由于加速幂是我学的最精的了，又在协会做过讲解，第一篇文章就来讲加速幂。<br>这里加速幂分为三个部分：基础加速幂，矩阵加速幂和数列加速幂。</p><h3 id="基础加速幂"><a href="#基础加速幂" class="headerlink" title="基础加速幂"></a>基础加速幂</h3><p>首先来看一个2的19次幂的加速。</p><p><img src="http://ten.ranuxy.com/i/2021/05/06/gyha6n.png"></p><p>这是一个不断给总幂数二分，底数平方的过程。不多说，上代码讲解。</p><p>洛谷<strong>P1226 【模板】快速幂||取余运算</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> k <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">%</span>k<span class="token punctuation">;</span>                String end <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">"^"</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">" mod "</span> <span class="token operator">+</span> k <span class="token operator">+</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//下面循环是核心算法</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//幂数分完了即可退出循环</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断所剩幂数是否为奇数，是奇数就得乘以一次底数，不能丢失这个奇数幂。</span>            <span class="token punctuation">{</span>                ans <span class="token operator">=</span> ans<span class="token operator">*</span>a<span class="token operator">%</span>k<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            n<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//幂数二分并底数平方</span>            a<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token operator">%</span>k<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ans<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>            ans<span class="token operator">=</span><span class="token operator">-</span>ans<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>end<span class="token operator">+</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先以不会出现奇数次幂的16次幂为例，我们可以把16次幂分为2个8次幂，而后4个4次幂，接着8个2次幂，最后才是16个1次幂，简单的无奇数次幂的至此结束。</p><p>因此，最简单的就是如此不断将底数平方，平方一次便少一半幂数，直至幂数为零得出答案。</p><p>为保证数据通用，那奇数次幂当然得考虑。</p><p>以2的19次幂为例，19是一个奇数，直接二分会导致丢失一个幂数，因此在每个奇次幂数的时候由ans乘上一次底数。19÷2=9余1，不能丢失这个奇数幂。注意：并不是2的幂数才除以2，而是因为这是一个二分的过程才将幂数除以2，与开始的底数无关。</p><p>奇数与偶数次幂的结合，即得出这里的加速幂。</p><h3 id="矩阵加速幂"><a href="#矩阵加速幂" class="headerlink" title="矩阵加速幂"></a>矩阵加速幂</h3><p>​        建立在上面加速幂的基础上，先掌握基础加速幂的情况再看下面，不能理解的建议多多根据代码理解。我没学过矩阵，就根据我的想法理解矩阵。</p><p>​        求矩阵加速幂：设矩阵为A,那么便是快速的求出A的K次幂。</p><p>​        首先，来理解为什么矩阵能加速，基础加速幂是一个数的加速幂，很明显，将一个数看成1X1矩阵就行了。既然一阶矩阵能加速，那么其他阶的自然能行。</p><p>先理解两个概念：</p><ul><li>单位矩阵：左高右低对角线为1的矩阵，乘以任何矩阵都不变，对应一阶的1。</li><li>基础矩阵：所求A的K次幂的A。</li></ul><p>上代码讲解。</p><p>洛谷<strong>P3390 【模板】矩阵快速幂</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">long</span> mod <span class="token operator">=</span> <span class="token number">1000000000</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> m  <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//基础矩阵</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//单位矩阵</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//单位矩阵左高右低对角线为一</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                sq<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//加速幂算法</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//幂数分完停止</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans <span class="token operator">=</span> <span class="token function">mult</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分出一个奇数幂，不能丢失</span>                m<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>            <span class="token punctuation">{</span>                sq <span class="token operator">=</span> <span class="token function">mult</span><span class="token punctuation">(</span>sq<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//基础矩阵平方，对应底数的平方</span>                m<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>    <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>            <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//矩阵乘法运算</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">mult</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//遍历a的行    同时是c的行        </span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//遍历b的列  同时是c的列</span>            <span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//遍历a的列 遍历b的行</span>                <span class="token punctuation">{</span>                    c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> c<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>矩阵加速很简单，只是换成了矩阵的运算方法，相信在基础加速幂的基础上很容易理解。</p><p>重要的是弄懂那两个概念，理解不是问题。</p><h3 id="数列加速幂"><a href="#数列加速幂" class="headerlink" title="数列加速幂"></a>数列加速幂</h3><p>同样先理解上面的点。</p><p>此问题为求数列的第几项，如求斐波那契数列的第1883项。</p><p>可以从2的19次幂看出，无非是求2的n次幂这个等比数列的第19项，但是基础加速幂只能满足等比数列的求解，因此又有了其他数列的加速求解。</p><p>这里的加速是通过矩阵实现的，要矩阵加速便需要得知单位矩阵和基础矩阵，下面是求这两个矩阵的方法。</p><p>以斐波那契数列为</p><p>上代码。</p><p>洛谷<strong>P1962 斐波那契数列</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">long</span> mod <span class="token operator">=</span> <span class="token number">1000000007</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sq <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        n<span class="token operator">-=</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans<span class="token operator">=</span><span class="token function">mutl</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span>                n<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>             <span class="token punctuation">{</span>                sq<span class="token operator">=</span><span class="token function">mutl</span><span class="token punctuation">(</span>sq<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span>                n<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">mutl</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> c<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟上一题没什么可改的，不同的就是需要自行求出单位矩阵和基础矩阵。</p><h3 id="自言自语"><a href="#自言自语" class="headerlink" title="自言自语"></a>自言自语</h3><p>熟练使用JAVA的API 省二起步，熟练图论的模板，省一get！</p><p>加入光荣的进化吧！</p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Idea-2021-1的破解方法</title>
      <link href="posts/1011.html"/>
      <url>posts/1011.html</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA大法好！"><a href="#IDEA大法好！" class="headerlink" title="IDEA大法好！"></a><del>IDEA大法好！</del></h1><blockquote><p>2021/4/28 当前IDEA最新版本是2021.1</p></blockquote><h3 id="一-下载安装"><a href="#一-下载安装" class="headerlink" title="一. 下载安装"></a>一. 下载安装</h3><ul><li><a href="https://www.jetbrains.com/idea/download/#section=windows">官网下载</a></li></ul><blockquote><p>我个人是下最新版，但破解方式可能会不同，得看你们自己搜寻（2021.1官方支持中文汉化插件了）</p></blockquote><ul><li><a href="https://pan.baidu.com/s/1kGwu5Lv3L8Y6UFEZF6OPXA">破解软件</a></li></ul><blockquote><p>目前（2021/4/28）新版本所有破解激活码都无效了（99年那种），这次是介绍一个无限重置试用期的插件</p></blockquote><blockquote><p>提取码↓</p></blockquote><pre><code>Z233</code></pre><blockquote><p><strong>原理简单来说就是通过重置clion的30天试用时间，插件会在在IDE窗口切出去或切回来时（窗口失去/得到焦点）会触发事件，检测是否长时间（超过25天）没有重置，给通知让你选择。（初次安装因为无法获取上次重置时间，会直接给予提示），同时本插件设置有auto按钮，*<em>Auto reset before per restart 如果勾选了，则自勾选后每次重启/退出IDE时会自动重置试用信息，你无需做额外的事情。（自动重置方式）无需再管，一劳永逸！*</em></strong></p></blockquote><h2 id="使用演示"><a href="#使用演示" class="headerlink" title="使用演示"></a>使用演示</h2><ul><li><p>先看看没安装插件的剩余试用时间 <strong>(如图所示 还有29天)</strong></p><p><img src="http://ten.ranuxy.com/i/2021/05/06/gws4i5.png"></p></li><li><p>下载上面的破解软件，<strong>不用解压缩！</strong>，直接拖入IDEA里面</p><p><img src="http://ten.ranuxy.com/i/2021/05/06/4p3rlep.png"></p></li><li><p>拖进去后，右下角会弹个正在安装的进度条，安装完后会提示安装完毕（如下图）</p></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gws21c.png"></p><ul><li>通过顶部工具栏 <strong>help -&gt; Eval reset</strong>调出插件的试用界面</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gws9w0.png"></p><ul><li><p>插件试用界面调出来后我们可以看到右下角如下所示，有一个自动勾选框</p><blockquote><p>勾选 1 后 点击 2 就成功了<br><img src="http://ten.ranuxy.com/i/2021/05/06/gwsa16.png"></p></blockquote></li><li><p>你的试用期就又时光回溯为30天了，自此，就<strong>永远无法到达过期的事实</strong></p></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gwsd4z.png"></p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p><em><strong>现在这种插件重置方式比补丁激活的方式更香，官方无法封杀！！！只是通过重置了使用信息来保障我们可以一直用下去。也不存在法律上的问题（并没有破解他的软件，我们使用的还是正版。只不过是通过自动方式代替了繁琐的手动卸载重装操作而已）。现在又可以安心的码代码了！</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的下载,安装,配置</title>
      <link href="posts/1010.html"/>
      <url>posts/1010.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://zhuanlan.zhihu.com/p/26920622#:~:text=3.MySQL%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%20MySQL%E6%98%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%8C%E8%83%BD%E5%A4%9F%E5%B8%AE%E5%8A%A9%E4%BD%A0%E7%AE%A1%E7%90%86%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%98%AF%E5%BC%80%E6%BA%90%E7%9A%84%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E8%BF%99%E6%98%AF%E5%85%8D%E8%B4%B9%E7%9A%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%BF%85%E8%A6%81%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BF%AE%E6%94%B9%E6%BA%90%E4%BB%A3%E7%A0%81%E3%80%82%20%E5%B0%BD%E7%AE%A1MySQL%E6%98%AF%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B9%B0%E7%A4%BE%E5%8C%BA%E7%89%88%E6%89%8D%E8%83%BD%E5%BE%97%E5%88%B0%E4%B8%93%E9%A1%B9%E6%9C%8D%E5%8A%A1%E3%80%82%20MySQL%20%E5%AF%B9%E6%AF%94Oracle%E5%92%8C%20SQL,server%20%E6%9C%89%E9%9D%9E%E5%B8%B8%E5%A4%A7%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%82%20.%20MySQL%20%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%87%A0%E4%B9%8E%E6%89%80%E6%9C%89%E5%B9%B3%E5%8F%B0%E4%B8%8A%E8%BF%90%E8%90%A5UNIX%2C%20Linux%2C%20Windows%EF%BC%8C%E5%B0%8F%E5%88%B0%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84pc%E4%B8%AD%EF%BC%8C%E8%80%8C%E4%B8%94%EF%BC%8C%E5%8F%AF%E9%9D%A0%EF%BC%8C%E5%8F%AF%E6%8B%93%E5%B1%95%EF%BC%8C%E8%BF%90%E8%A1%8C%E9%80%9F%E5%BA%A6%E9%A3%9E%E5%BF%AB%E3%80%82">Mysql是什么？</a><br><strong>为什么要学mysql？</strong><br><strong>·</strong>  它是你学<strong>web</strong>的一个<strong>前置科技</strong>(huaji)<br><strong>·</strong>  方便好用<br><strong>·</strong>  现在大数据时代不学几个数据库迟早被淘汰。     </p><h1 id="Mysql-下载，安装"><a href="#Mysql-下载，安装" class="headerlink" title="Mysql 下载，安装"></a>Mysql 下载，安装</h1><h3 id="1-mysql官方下载"><a href="#1-mysql官方下载" class="headerlink" title="1.mysql官方下载"></a>1.<a href="https://downloads.mysql.com/archives/community">mysql官方下载</a></h3><h3 id="2-软协稳定版下载包"><a href="#2-软协稳定版下载包" class="headerlink" title="2.软协稳定版下载包"></a>2.<a href="https://pan.baidu.com/s/1p1e_8EeUaE2mYcPl2t5Dfg">软协稳定版下载包</a></h3><blockquote><p>提取码:2333</p></blockquote><h1 id="Mysql-安装和配置"><a href="#Mysql-安装和配置" class="headerlink" title="Mysql 安装和配置"></a>Mysql 安装和配置</h1><h3 id="1-解压"><a href="#1-解压" class="headerlink" title="1.解压"></a>1.解压</h3><blockquote><p>解压文件时候注意你的路径不能是中文！（跟安装steam游戏库一个道理</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/fnvgh9.png"></p><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h3><blockquote><p>点击我的电脑(此电脑-)&gt;鼠标右键点击-&gt; 左键点击我的属性-&gt;点击高级系统设置-&gt;点击环境变量。</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/foqg5y.png"></p><ul><li>点击系统变量下的<strong>path</strong></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fpxgyq.png"></p><ul><li>然后新建一个变量 填写解压后的mysql下的bin的路径</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fpxml2.png"></p><h3 id="3-编辑mysql配置文件"><a href="#3-编辑mysql配置文件" class="headerlink" title="3.编辑mysql配置文件"></a>3.编辑mysql配置文件</h3><p><img src="https://riyugo.com/i/2021/04/27/12f8u6z.png"></p><blockquote><p>然后后右键用记事本打开也好，vscode打开也好 ,总之要进去编辑。</p></blockquote><pre class="line-numbers language-c"><code class="language-c"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span>D<span class="token punctuation">:</span>\mysql\mysql<span class="token number">-5.7</span><span class="token punctuation">.</span><span class="token number">28</span>\datadir<span class="token operator">=</span>D<span class="token punctuation">:</span>\mysql\mysql<span class="token number">-5.7</span><span class="token punctuation">.</span><span class="token number">28</span>\data\port<span class="token operator">=</span><span class="token number">3306</span>skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables #跳过权限验证的 就是初始化的时候用的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意</strong>！<img src="http://ten.ranuxy.com/i/2021/05/06/fpyjyu.png"></p><p>编辑的路径要是你自己解压mysql的路径</p><p>复制上述代码黏贴到ini文件上保存</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/fr59os.png"></p><h3 id="4-开始初始化安装"><a href="#4-开始初始化安装" class="headerlink" title="4.开始初始化安装"></a>4.开始初始化安装</h3><ul><li>切换到mysql的bin目录下，在路径输入cmd<blockquote><p>如果不是默认管理员模式的话要先启动管理员CMD模式，再用cd命令切换到mysql的bin目录下<img src="http://ten.ranuxy.com/i/2021/05/06/frea84.png"></p></blockquote></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fre7kf.png"></p><ul><li>然后输入安装命令 <strong>mysqld -install</strong> 命令</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fty3ns.png"></p><ul><li>然后输入 <strong>mysqld –initialize-insecure –user=mysql</strong> 初始化数据文件，再尝试下面代码是否可行。</li></ul><blockquote><p>net start mysql  #mysql启动命令<br>net stop mysql   # mysql 停止命令</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/gt198z.png"></p><h3 id="5-登录与修改密码"><a href="#5-登录与修改密码" class="headerlink" title="5.登录与修改密码"></a>5.登录与修改密码</h3><ul><li>顺利完成上面的步骤后，恭喜你 你已经可以在<strong>cmd启动mysql</strong>了</li></ul><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>用CMD启动：</p><blockquote><pre class="line-numbers language-c"><code class="language-c">#输入mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p # 输完后按回车（密码可以暂且为空 之前我们在配置文件里加了一行跳过权限验证的）。# 出现输入的 直接回车即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><ul><li>注意:要先输入<strong>net start mysql</strong> 启动mysql服务后再输入</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gtijv1.png"></p><blockquote><p>现在就进入了mysql了！</p></blockquote><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><pre><code>update mysql.user set authentication_string=password('123456') where user='root' and Host = 'localhost';</code></pre><ul><li>当然只是修改密码是不会生效的 还要刷新权限</li></ul><pre><code>flush privileges;</code></pre><ul><li>最后最后 一定要记得要重启mysql 才能生效的，不然mysql是不会认的你的。</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="http://ten.ranuxy.com/i/2021/05/06/gtoexo.png"></p><p><strong>恭喜你，点亮了web的前置科技，加入光荣的进化吧！少年！</strong></p><blockquote><p>如果你以前安装过的话，需要重装的话，一定一定要把环境清理干净。</p><p>安装了mysql服务 接下来就要安装一个 <strong>数据库可视化操作的软件</strong>啦。协会制式可视化软件是 <strong>Navicat Premium 12</strong>，你想用其他的也可以</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高僧斗法（NIM）</title>
      <link href="posts/undefined.html"/>
      <url>posts/undefined.html</url>
      
        <content type="html"><![CDATA[<p>#问题描述</p><hr><p>古时丧葬活动中经常请高僧做法事。仪式结束后，有时会有“高僧斗法”的趣味节目，以舒缓压抑的气氛。</p><p>　　节目大略步骤为：先用粮食（一般是稻米）在地上“画”出若干级台阶（表示N级浮屠）。又有若干小和尚随机地“站”在某个台阶上。最高一级台阶必须站人，其它任意。</p><p>　　两位参加游戏的法师分别指挥某个小和尚向上走任意多级的台阶，但会被站在高级台阶上的小和尚阻挡，不能越过。两个小和尚也不能站在同一台阶，也不能向低级台阶移动。</p><p>　　两法师轮流发出指令，最后所有小和尚必然会都挤在高段台阶，再也不能向上移动。轮到哪个法师指挥时无法继续移动，则游戏结束，该法师认输。</p><p>　　对于已知的台阶数和小和尚的分布位置，请你计算先发指令的法师该如何决策才能保证胜出。</p><p>##输入格式</p><hr><p>　　输入数据为一行用空格分开的N个整数，表示小和尚的位置。台阶序号从1算起，所以最后一个小和尚的位置即是台阶的总数。（N&lt;100, 台阶总数&lt;1000）</p><hr><p>##输出格式<br>　　输出为一行用空格分开的两个整数: A B, 表示把A位置的小和尚移动到B位置。若有多个解，输出A值较小的解，若无解则输出-1。</p><p>##样例输入</p><p>1 5 9</p><p>##样例输出</p><p>1 4</p><p>##样例输入</p><p>1 5 8 10</p><p>##样例输出</p><p>1 3</p><p>题解看注释，对NIm游戏不熟悉的移步<a href="https://www.bilibili.com/video/BV17U4y1s777?p=92">NIM游戏</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>     String A<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//字符串输入</span>    String<span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token operator">=</span> A<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//以空格为分割点</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">int</span> <span class="token punctuation">[</span>str<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//转化为整数</span>    <span class="token punctuation">}</span>    <span class="token function">sovle</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解释函数</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sovle</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//遍历从第一个位置到第二个位置</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//枚举所有移动步数</span>        <span class="token punctuation">{</span>            <span class="token keyword">int</span> old<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存放没有移动的位置</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>k<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//尝试</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">slim</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>old<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//找到解就结束程序</span>            <span class="token punctuation">}</span>                    <span class="token keyword">finally</span> <span class="token punctuation">{</span>                        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>old<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//没有解就回溯</span>                                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// TODO: handle exception</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">slim</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//Nim模板</span>    <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ans<span class="token operator">^=</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="posts/undefined.html"/>
      <url>posts/undefined.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
