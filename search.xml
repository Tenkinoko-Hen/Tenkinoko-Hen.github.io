<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring-MVC ④ [登录注册 (登录拦截)]</title>
      <link href="posts/2001.html"/>
      <url>posts/2001.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SpringMVC-入门——④-登录注册-登录检测"><a href="#SpringMVC-入门——④-登录注册-登录检测" class="headerlink" title="SpringMVC 入门——④[登录注册(+登录检测)]"></a>SpringMVC 入门——④[登录注册(+登录检测)]</h1><blockquote><p>在上个基础上加了一个登录检测功能</p></blockquote><h3 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h3><ol><li><p><strong>创建 主页面.jsp 注册.jsp 登录.jsp 登录成功/失败.jsp</strong></p><blockquote><p>基本都会吧，就不重复了</p></blockquote></li><li><p><strong>配置拦截器，判断是否是登录状态</strong></p></li><li><p><strong>编写实现类(Controller)代码</strong></p></li><li><p><strong>实现如下逻辑</strong></p></li></ol><p><img src="http://ten.ranuxy.com/i/2021/06/28/xsp9m3.png"></p><h3 id="登录用户的时间线-gt"><a href="#登录用户的时间线-gt" class="headerlink" title="登录用户的时间线>"></a>登录用户的时间线&gt;</h3><hr><p><img src="http://ten.ranuxy.com/i/2021/06/28/weem8m.jpg"></p><p><strong>index.jsp</strong></p><p>查看：链接的是成功的页面</p><p>登录：链接的是登录页面</p><pre><code>&lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%&gt;&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;meta name="viewport"          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;    　&lt;script src="https://code.jquery.com/jquery-3.1.1.min.js"&gt;&lt;/script&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;宇宙的秘密，意识的源头，BUG的由来都在这了&lt;/h1&gt;&lt;a href="${pageContext.request.contextPath}/demo1/succse"&gt;查看&lt;/a&gt;&lt;a href="${pageContext.request.contextPath}/demo1/tologin"&gt;登录&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>Controller层中的业务类     定义两个页面跳转方法</p><blockquote><p>如果是已经登录用户的状态，则直接跳转到成功页面</p><p>如果是没有登录用户的状态，则跳转到登录用户页面</p></blockquote><pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/succse"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">succes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"succse"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/tologin"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">tologin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>         <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/toRegister"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">toRegister</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"regUser"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><blockquote><p>程序要如何判断当前是否登录了用户，就要用到SpringMVC的拦截器</p><p>创建一个interceptor 代码包，在里面新建一个JAVA文件编写一个拦截器</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//拦截器类似于动态代理，拦截器有三个方法：preHandle、postHandle、afterCompletion，拦截器位于控制器运行之前（preHandle）和之后（postHandle、afterCompletion）执行的。在这里preHandle是有一个boolean返回值的，返回true，执行控制器和另外两个方法，放回false，则只刷新页面，不做任何操作。</span>    <span class="token keyword">package</span> com<span class="token punctuation">.</span>Ten<span class="token punctuation">.</span>interceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpSession<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoCommonInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Controller层中的业务类方法 执行之前 调用这个方法     */</span>         <span class="token annotation punctuation">@Override</span>         <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span>                     Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>     String url <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 登录，注册请求都不拦截</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"/tologin"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token operator">||</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"/regUser"</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">0</span><span class="token operator">||</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"/toregUser"</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">0</span><span class="token operator">||</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"/tologin"</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">0</span><span class="token operator">||</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">//从前端获取Session值，判断当前是否是登录过的</span>     HttpSession session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//登录过用户的话就放下去</span>          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//没有登录就去登录</span>           request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/views/login.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="配置拦截器"><a href="#配置拦截器" class="headerlink" title="配置拦截器"></a>配置拦截器</h4><blockquote><p>在Spring-mvc.xml 文件中配置拦截器</p></blockquote><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 登录拦截器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置一个全局拦截器，拦截所有请求 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.Ten.interceptor.DemoCommonInterceptor<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptor</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置拦截器作用的路径 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/**<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 定义在&lt;mvc: interceptor>元素中，表示匹配指定路径的请求才进行拦截 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.Ten.interceptor.DemoCommonInterceptor<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>interceptor</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="没有登录用户的时间线-gt"><a href="#没有登录用户的时间线-gt" class="headerlink" title="没有登录用户的时间线>"></a>没有登录用户的时间线&gt;</h3><hr><blockquote><p>由于被拦截器拦截，判断没有登录用户，则跳转到注册界面</p></blockquote><p><strong>regUser.jsp</strong></p><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Tenkinoko  Date: 2021/6/24  Time: 19:22  To change this template use File | Settings | File Templates.--%&gt;&lt;%@ page language="java" import="java.util.*" pageEncoding="utf-8"%&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;&lt;%    request.setCharacterEncoding("utf-8");%&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;用户注册&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;h3&gt;用户注册&lt;/h3&gt;&lt;form method="post" action="${pageContext.request.contextPath}/demo1/regUser"&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;注册用户名&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="text" name="uname"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;注册密码&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="password" name="upassword"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;用户名&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="text" name="un"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;注册&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="submit" value="注册"&gt;&lt;/td&gt;        &lt;/tr&gt;    &lt;/table&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><blockquote><p>输入完数据后 提交给业务层的regUser.方法</p></blockquote><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//用MAP存储前端给予的数值</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/regUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">regUser</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map<span class="token punctuation">,</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"upassword"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getUpassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在业务层这个类的上面加入@SessionAttributes(）注释</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SessionAttributes</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"uname"</span><span class="token punctuation">,</span> <span class="token string">"upassword"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这个注释会在数据域把Value中相应 key 值的数据赋值给Session 供全层调用</p></blockquote><h4 id="注册完后转到登录界面"><a href="#注册完后转到登录界面" class="headerlink" title="注册完后转到登录界面"></a>注册完后转到登录界面</h4><p><strong>login.jsp</strong></p><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Tenkinoko  Date: 2021/6/24  Time: 19:26  To change this template use File | Settings | File Templates.--%&gt;&lt;%@ page language="java" import="java.util.*" pageEncoding="utf-8"%&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;&lt;%    request.setCharacterEncoding("utf-8");%&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;登录界面&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h3&gt;用户登录&lt;/h3&gt;&lt;form method="post" action="${pageContext.request.contextPath}/demo1/login"&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;登录账号&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="text" name="uname"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;登录密码&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="password" name="upassword"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;input type="submit" value="登录"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;a href="${pageContext.request.contextPath}/demo1/toRegister"&gt;注册&lt;/a&gt;        &lt;/tr&gt;    &lt;/table&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><blockquote><p>登录完成后转到 业务层执行登录业务</p></blockquote><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">login</span><span class="token punctuation">(</span>HttpSession session<span class="token punctuation">,</span> String uname<span class="token punctuation">,</span> String upassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>userService<span class="token punctuation">.</span><span class="token function">poker</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> uname<span class="token punctuation">,</span> upassword<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">,</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"redirect:/index.jsp"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"regUser"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>userService是 Service层专门处理业务逻辑的类 poker 是判断登录的用户名和密码是否在”数据库”中</p></blockquote><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span>  <span class="token keyword">boolean</span> <span class="token function">poker</span><span class="token punctuation">(</span>HttpSession session<span class="token punctuation">,</span>String uname<span class="token punctuation">,</span> String upward<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">poker</span><span class="token punctuation">(</span>HttpSession session<span class="token punctuation">,</span>String uname<span class="token punctuation">,</span> String upward<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>uname<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>upward<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"upassword"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//我用session里面的key值 代表数据库(其实意思差不多,都是判断是否有这玩意)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>登录成功就转到主页面，登录失败就转到登录失败的页面（重新登录）</strong></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p><strong>只是简简单单的配合拦截器写个登录拦截，其实也不太完善，没有错误提示，成功提示等等，Session其实这样用也不好。</strong></p><blockquote><p>由俭入奢易，由奢入俭难。</p><p>一入源码深似海，从此节操是路人</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-MVC ③ [登录注册 (小demo)]</title>
      <link href="posts/2000.html"/>
      <url>posts/2000.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SpringMVC-入门——①-登录注册-（小demo"><a href="#SpringMVC-入门——①-登录注册-（小demo" class="headerlink" title="SpringMVC 入门——①[登录注册 （小demo)]"></a>SpringMVC 入门——①[登录注册 （小demo)]</h1><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><hr><blockquote><p>建议先看完 <strong>Spring-MVC ② [常见和只需要了解的注释]</strong> 再食用</p><p>因为是小demo 所以一切从简，主要演示基本功能</p></blockquote><h4 id="1-注册-jsp-登录-jsp-主界面-jsp-登录成功-jsp"><a href="#1-注册-jsp-登录-jsp-主界面-jsp-登录成功-jsp" class="headerlink" title="1.注册.jsp  登录.jsp 主界面.jsp  登录成功.jsp"></a>1.注册.jsp  登录.jsp 主界面.jsp  登录成功.jsp</h4><h5 id="A-主界面-jsp"><a href="#A-主界面-jsp" class="headerlink" title="A 主界面.jsp"></a>A 主界面.jsp</h5><hr><p>​    <img src="http://ten.ranuxy.com/i/2021/06/24/xesu2p.png"></p><blockquote><p>能用就行</p></blockquote><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/user/addUser<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>用户注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/user/showLogin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意！！！</p><p>建议养成写</p><pre class="line-numbers language-xml"><code class="language-xml">{pageContext.request.contextPath}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个EL表达式的习惯，这个表达式的作用是<strong>：取出部署的应用程序名，这样不管如何部署，所用路径都是正确的</strong></p><h5 id="B-注册界面-jsp"><a href="#B-注册界面-jsp" class="headerlink" title="B 注册界面.jsp"></a>B 注册界面.jsp</h5><hr><p>​        <img src="http://ten.ranuxy.com/i/2021/06/24/xqkusu.png"></p><p>​        </p><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Tenkinoko  Date: 2021/6/24  Time: 19:26  To change this template use File | Settings | File Templates.--%&gt;    &lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;用户注册&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;h3&gt;用户注册&lt;/h3&gt;&lt;form method="post" action="${pageContext.request.contextPath}/user/addregUser"&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;登录名&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="text" name="uname"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;登录密码&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="password" name="upassword"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;用户名&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="text" name="un"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;注册&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="submit" name="注册"&gt;&lt;/td&gt;        &lt;/tr&gt;    &lt;/table&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h5 id="C-登录界面-jsp"><a href="#C-登录界面-jsp" class="headerlink" title="C 登录界面.jsp"></a>C 登录界面.jsp</h5><hr><p><img src="http://ten.ranuxy.com/i/2021/06/24/xvdlsp.png"></p><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Tenkinoko  Date: 2021/6/24  Time: 19:26  To change this template use File | Settings | File Templates.--%&gt;    &lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;登录界面&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h3&gt;用户登录&lt;/h3&gt;&lt;form method="post" action="${pageContext.request.contextPath}/user/loginUser"&gt;    &lt;table&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;登录账号&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="text" name="uname"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;label&gt;登录密码&lt;/label&gt;&lt;/td&gt;            &lt;td&gt;&lt;input type="password" name="upassword"&gt;&lt;/td&gt;        &lt;/tr&gt;        &lt;tr&gt;            &lt;td&gt;&lt;input id="submit" type="submit" name="登录"&gt;&lt;/td&gt;        &lt;/tr&gt;    &lt;/table&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>​    <strong>D 登录成功</strong></p><hr><blockquote><p>写个你喜欢的jsp文件就行</p></blockquote><pre><code>&lt;%--  Created by IntelliJ IDEA.  User: Tenkinoko  Date: 2021/6/23  Time: 19:06  To change this template use File | Settings | File Templates.--%&gt;&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;h1&gt;皆さん❕&lt;/h1&gt;    &lt;h2&gt; 大好き❕&lt;/h2&gt;    &lt;h3&gt;あいしてる！&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="2-Controller层的一个方法"><a href="#2-Controller层的一个方法" class="headerlink" title="2.Controller层的一个方法"></a>2.Controller层的一个方法</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>Ten<span class="token punctuation">.</span>handler<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>Ten<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestParam<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserHandler</span> <span class="token punctuation">{</span>   <span class="token keyword">private</span>  <span class="token keyword">static</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token string">"regUser"</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/loggin"</span><span class="token punctuation">)</span>   <span class="token keyword">public</span> String <span class="token function">logins</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span>  <span class="token string">"login"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/addregUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">regUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span> String name<span class="token punctuation">,</span>                          <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"upassword"</span><span class="token punctuation">)</span> String password<span class="token punctuation">,</span>                          <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"un"</span><span class="token punctuation">)</span> String un<span class="token punctuation">)</span><span class="token punctuation">{</span>       User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>password<span class="token punctuation">,</span>un<span class="token punctuation">)</span><span class="token punctuation">;</span>       list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/loginUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span> String name<span class="token punctuation">,</span>                        <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"upassword"</span><span class="token punctuation">)</span> String password<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">for</span><span class="token punctuation">(</span>User user<span class="token operator">:</span>list<span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>user<span class="token punctuation">.</span><span class="token function">getUpassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token keyword">return</span> <span class="token string">"mvc"</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-pojo实现层的一个方法"><a href="#3-pojo实现层的一个方法" class="headerlink" title="3.pojo实现层的一个方法"></a>3.pojo实现层的一个方法</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>Ten<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>AllArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String uname<span class="token punctuation">;</span>    <span class="token keyword">private</span> String upassword<span class="token punctuation">;</span>    <span class="token keyword">private</span> String un<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-结语"><a href="#4-结语" class="headerlink" title="4.结语"></a>4.结语</h4><blockquote><p>现学现卖吧，不知道怎么转的话就多看，其实就是反复横跳。</p><p>“你目前觉得不想做的事情 就是你现在需要做的。”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-MVC ② [常见和只需要了解的注释]</title>
      <link href="posts/1100.html"/>
      <url>posts/1100.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Spring-①-【PLUS】"><a href="#Spring-①-【PLUS】" class="headerlink" title="Spring ① 【PLUS】"></a>Spring ① 【PLUS】</h1><blockquote><p>建议先食用前一个入门文档</p></blockquote><h5 id="RequestMapping-（）作用"><a href="#RequestMapping-（）作用" class="headerlink" title="@RequestMapping （）作用"></a>@RequestMapping （）作用</h5><ol><li><p>Spring MVC使用**@RequestMapping<strong>注解为控制器指定可以处理那些</strong>URL**请求</p></li><li><p>在控制器的<strong>类定义及方法定义处</strong>都可标注</p><p><strong>@RequestMapping</strong></p><ul><li><strong>类定义处</strong> : 提供初步的请求映射信息。相对于WEB应用的根目录</li><li><strong>方法处</strong> : 提供进一步的细分映射信息。相对于类定义处的URL。若类定义处未标注@RequestMapping，则方法处标记的URL相对于WEB应用的根目录</li></ul><p>3.DispatcherServlet截获请求后,就通过控制器@RequestMapping提供的映射信息确定请求所对应的处理</p></li></ol><blockquote><p>如题</p></blockquote><p>​    </p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>joker<span class="token punctuation">.</span>handlers<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/springmvc"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringMvcTest</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span>  <span class="token keyword">static</span> <span class="token keyword">final</span>  String success<span class="token operator">=</span><span class="token string">"success"</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我跳了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  success<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在前端.jsp文件中 要想执行这个方法的格式为</p></blockquote><pre><code>&lt;a href="${pageContext.request.contextPath}/springmvc/test"&gt;XX&lt;/a&gt;</code></pre><blockquote><p>可以在不同的类 修饰一样名字的方法</p><p>springmvc/test</p><p>springmv/test</p><p>springm/test</p><p>都可！</p><p>修饰类就是找哪个旅馆</p><p>修饰方法就是找哪间房间</p><p>一个旅馆不能有相同的房间，但不同的旅馆可以有相同的房间</p></blockquote><h5 id="RequestMapping-映射请求参数、请求方法或请求头"><a href="#RequestMapping-映射请求参数、请求方法或请求头" class="headerlink" title="@RequestMapping 映射请求参数、请求方法或请求头"></a>@RequestMapping 映射请求参数、请求方法或请求头</h5><blockquote><p>1.RequestMapping注解的作用是建立请求URL和处理方法之间的对应关系</p><p>2.RequestMapping注解可以作用在方法和类上<br>   1.作用在类上：第一级的访问目录<br>   2.作用在方法上：第二级的访问路径<br>   3.细节：路径可以不编写/表示应用的根目录开始</p><p>3.RequestMapping的属性<br>   1.path      指定请求路径的URL<br>   2.value     value属性和path属性是一样的<br>   3.method    指定该方法的请求方式<br>   4.param     指定限制请求参数的条件</p></blockquote><p><strong>1.params和headers支持简单的表达式:</strong></p><ul><li><pre><code>    param1:表示请求必须包含名为param1的请求参数</code></pre></li><li><pre><code>      !param1: 表示请求不能包含名为param1的请求参数</code></pre></li><li><pre><code>       param1 != value1:表示请求包含名为param1的请求参数,但其值不能为value1</code></pre></li><li><pre><code>          {"param1=value1", "param2"}:请求必须包含名为param1和param2的两个请                   求参数，且param1参数的值必须为value1</code></pre></li></ul><blockquote><p>●@RequestMapping 的value、method、params 及heads<br>分别表示请求URL、请求方法、请求参数及请求头的映射条<br>件,他们之间是与的关系，联合使用多个条件可让请求映射<br>更加精确化。</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/23/rcaqd1.png"></p><h5 id="PathVariable映射URL绑定的占位符"><a href="#PathVariable映射URL绑定的占位符" class="headerlink" title="@PathVariable映射URL绑定的占位符"></a>@PathVariable映射URL绑定的占位符</h5><p>通过@PathVariable可以将URL中占位符参数绑定到控制器处理方法的入参中:<br>URL中的{xox}占位符可以通过@PathVariable(“xox”)绑定到操作方法的入参中。</p><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"test4/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">testPathVarible</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> Integer id<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你看看我给你带什么来了？："</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> success<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>当index.jsp 中的这段代码点击后  上面就会接收到这个请求，自动把id赋值</p></blockquote><pre><code>&lt;a href="/springmvc/test4/3"&gt;给我翻译翻译，什么叫惊喜？&lt;/a&gt;</code></pre><blockquote><p>成功就会赋值 1 </p><p>错误就会赋值 0</p><p>这也是前端常说的状态码</p></blockquote><h5 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h5><blockquote><p>REST 是一个规范；8个method 憋只按着GET 一个往死里薅！</p></blockquote><p> <strong>Rest风格的URL：</strong></p><blockquote><p>以CRUD为例:<br> 新增(POST): /order POST<br> 修改(PUT):  /order/1 PUT<br> 获取(GET)： /order/1 GET<br> 删除(DELETE): /order/1 DELETE</p></blockquote><h5 id="如何发送PUT请求和DELETE请求呢"><a href="#如何发送PUT请求和DELETE请求呢" class="headerlink" title="如何发送PUT请求和DELETE请求呢?"></a><strong>如何发送PUT请求和DELETE请求呢?</strong></h5><p>  <strong>1.需要配置HiddenHttpMethodFilter</strong></p><blockquote><p>在web.xml文件下</p></blockquote><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>HiddenHttpMethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>HiddenHttpMethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​            1.2 原理</p><p>​            <img src="http://ten.ranuxy.com/i/2021/06/24/phtkow.png"></p><p><strong>2.需要发送POST请求</strong></p><pre><code>&lt;a href="/springmvc/test5/1"&gt;Test Rest Get&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;form action="/springmvc/test5" method="post"&gt;    &lt;input type="submit" value="Test Rest POST"&gt;&lt;/form&gt;&lt;br&gt;&lt;br&gt;&lt;form action="/springmvc/test5/1" method="post"&gt;    &lt;input type="hidden" name="_method" value="DELETE"&gt;    &lt;input type="submit" value="Test Rest DELETE"&gt;&lt;/form&gt;&lt;br&gt;&lt;br&gt;&lt;form action="/springmvc/test5/1" method="post"&gt;    &lt;input type="hidden" name="_method" value="PUT"&gt;    &lt;input type="submit" value="Test Rest PUT"&gt;&lt;/form&gt;</code></pre><p><strong>3.需要在发送POST请求时携带一个name=”_ method”的隐藏域，值为DELETE 或PUT</strong></p><pre><code>    &lt;input type="hidden" name="_method" value="(DELETE/PUT)"&gt;</code></pre><blockquote><p>这样子你的POST请求就可以转为 DELETE 或者PUT请求</p></blockquote><p>​    <strong>3.5 测试</strong></p><pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test5/{id}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span>  String <span class="token function">testRest</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Integer id<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Test Rest GET:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> success<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test5"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>    <span class="token keyword">public</span>  String <span class="token function">testRest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Test Rest POST:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> success<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test5/{id}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>PUT<span class="token punctuation">)</span>    <span class="token keyword">public</span>  String <span class="token function">testRestPUT</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Integer id<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Test Rest PUT:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> success<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test5/{id}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>DELETE<span class="token punctuation">)</span>    <span class="token keyword">public</span>  String <span class="token function">testRestDELETE</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Integer id<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Test Rest DELETE:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> success<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    <strong>3.9 结果</strong></p><p>​    <img src="http://ten.ranuxy.com/i/2021/06/24/qkik44.png"></p><h5 id="RequestParam-映射請求參數"><a href="#RequestParam-映射請求參數" class="headerlink" title="@RequestParam 映射請求參數"></a>@RequestParam 映射請求參數</h5><blockquote><p>@RequestParam 来映射请求参数。</p></blockquote><p>index.jsp</p><pre class="line-numbers language-jsp"><code class="language-jsp"><a href="/springmvc/userTest1?uname=admin&age=18">Link</a><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>handler類 </p><pre class="line-numbers language-java"><code class="language-java">   <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/userTest1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span>  String <span class="token function">User1</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"uname"</span><span class="token punctuation">)</span>String un<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"age"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"userTest1:"</span><span class="token operator">+</span>un<span class="token operator">+</span><span class="token string">" : "</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  success<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>翻譯 </p></blockquote><blockquote><p>当 点击 LINK 后 会执行上述方法 然后会解析上面？后面传来的 值 看 请求过来 的参数名 是否正确。</p></blockquote><blockquote><p>正确的话就赋值给定义的变量。</p></blockquote><p>其中</p><blockquote><p>value值即请求参数的参数名<br>required该参数是否必须。默认为true<br>defaultValue请求参数的默认值</p></blockquote><p>required 为flase的话 就算没有传那个值过来 也会执行.</p><hr><h6 id="RequestParam-相同格式的注释"><a href="#RequestParam-相同格式的注释" class="headerlink" title="@RequestParam 相同格式的注释"></a>@RequestParam 相同格式的注释</h6><blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">"Accept-Encoding"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// (绑定请求报头属性值)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span><span class="token string">"JSESSIONID"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 映射一个Cookie值</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-MVC ① [Hello MVC]</title>
      <link href="posts/1016.html"/>
      <url>posts/1016.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SpringMVC-入门——①-Hello-MVC"><a href="#SpringMVC-入门——①-Hello-MVC" class="headerlink" title="SpringMVC 入门——①(Hello MVC)"></a>SpringMVC 入门——①(Hello MVC)</h1><blockquote><p>点亮SSM科技树的最后一环，也是面向前端接口的一环，重要的一环。。。</p></blockquote><h6 id="1-配置环境jar包"><a href="#1-配置环境jar包" class="headerlink" title="1.  配置环境jar包"></a>1.  配置环境jar包</h6><blockquote><ul><li>这个版本按你们需求来定，注意spring jar版本要一致</li><li>commons-logging-1.1.3.jar</li><li>spring-aop-4.0.0.RELEASEjar</li><li>spring-beans-4.0.0.RELEASE.jar</li><li>spring-context-4.0.0.RELEASE.jar<br>一spring-core- 4.0.0.REL EASE.jar</li><li>spring-expression-4.0.0.RELEASE.jar</li><li>spring-web-4.0.0. REL EASEjar</li><li>spring-webmvc4.0.0. REL EASE.jar</li></ul></blockquote><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-expression<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-配置核心配置文件（web-xml"><a href="#2-配置核心配置文件（web-xml" class="headerlink" title="2.配置核心配置文件（web.xml)"></a>2.配置核心配置文件（web.xml)</h6><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>             <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<span class="token punctuation">"</span></span>             <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WebApp_ID<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--  配置DispatcherServlet--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置DispatcherServlet</li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--  配置DispatcherServlet--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springDispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--    配置 DusoarcgerServlet 的一个初始化参数：配置SpringMVC 配置文件的位置和名称--></span><span class="token comment" spellcheck="true">&lt;!----></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--加载配置文件，常用写法classpath:配置文件名  记得带上配置文件名的后缀哦--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!-- Map all requests to the DispatcherServlet for handling --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springDispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--过滤所有请求   个人建议直接用/--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件，而使用默认的。</p><p>默认的配置文件为：/WEB-INF/<servlet-name>-servlet.xml</servlet-name></p><p>因此可以整点花活(滑稽)</p></blockquote><ul><li><p>把你的spring-mvc.xml文件放到上述默认路径下</p><p><img src="http://ten.ranuxy.com/i/2021/06/23/gyv32i.png"></p></li><li><p>然后就可以偷懒去掉初始化力(注意spring-mvc文件名要改为  <strong>花名字-servlet</strong> )</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WebApp_ID<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--  配置DispatcherServlet--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>tenkinoko<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>tenkinoko<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>A：spring-mvc.xml是啥？</p><p> ​                                                                                                                                                                                        八要急，代码在下面 :T</p></blockquote><h6 id="3、配置spring-mvc-xml核心配置文件"><a href="#3、配置spring-mvc-xml核心配置文件" class="headerlink" title="3、配置spring-mvc.xml核心配置文件"></a>3、配置spring-mvc.xml核心配置文件</h6><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                                   http://www.springframework.org/schema/beans/spring-beans.xsd                                   http://www.springframework.org/schema/mvc                                   http://www.springframework.org/schema/mvc/spring-mvc.xsd                                   http://www.springframework.org/schema/context                                   http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置了内容，启动Tomcat服务器的时候，就会被加载--></span>    <span class="token comment" spellcheck="true">&lt;!--配置注解扫描--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.joker<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置视图解释器，进行页面的跳转--></span><span class="token comment" spellcheck="true">&lt;!--    如何把 handler 方法返回值解析为实际的物理视图--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewResolver<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--跳转的页面的路径--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/WEB-INF/views/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--跳转的页面的后缀名称--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Q:注解扫描倒还了解几许，这视图解释器又是个啥！</p><p>​                                                                                                                                                                  不要急，让我们先让子弹飞一会 ：T</p></blockquote><h6 id="4-编写index-jsp文件"><a href="#4-编写index-jsp文件" class="headerlink" title="4.编写index.jsp文件"></a>4.编写index.jsp文件</h6><blockquote><p>简简单单的测试主页，简简单单的生活</p></blockquote><pre class="line-numbers language-json"><code class="language-json">&lt;%@ page language=<span class="token string">"java"</span> contentType=<span class="token string">"text/html; charset=UTF-8"</span> pageEncoding=<span class="token string">"UTF-8"</span>%>&lt;!doctype html>&lt;html lang=<span class="token string">"en"</span>>&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;meta name=<span class="token string">"viewport"</span>          content=<span class="token string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>>    &lt;meta http-equiv=<span class="token string">"X-UA-Compatible"</span> content=<span class="token string">"ie=edge"</span>>    &lt;title>Document&lt;/title>&lt;/head>&lt;body>    &lt;a href=<span class="token string">"helloworld"</span>>你好呀&lt;/a>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="5-在表现层：Controller层（Handler层）编写一个HelloWrold-java文件"><a href="#5-在表现层：Controller层（Handler层）编写一个HelloWrold-java文件" class="headerlink" title="5.在表现层：Controller层（Handler层）编写一个HelloWrold.java文件"></a><strong>5.在表现层：Controller层（Handler层）编写一个HelloWrold.java文件</strong></h6><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>joker<span class="token punctuation">.</span>handlers<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     *     * @return     * 使用@RequestMapping 注解来映射请求的URL     * 返回值会通过视图解析器解析为实际的物理视图 对于 .InternalResourceViewResolver 视图解析器 会做如下的解析：     * 通过 perfix+returnVal + 后缀 这样的方式得到实际的物理视图，然后做赚翻操作     *     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/helloworld"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span>  String <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通往勝利的拼圖已經集齊了！いでよ！Blue-Eyes White Dragon!</p><p>先解释解释这些流程吧，相信你们也会有疑问</p></blockquote><p>​    <strong>1.当你启动tomacat服务器的时候 弹出的第一个页面是index.jsp的页面 这毋庸置疑的。</strong></p><p>​        然后页面上会有个<img src="http://ten.ranuxy.com/i/2021/06/23/4b7y73w.png"></p><p>​        这是index.jsp的语句    </p><pre class="line-numbers language-json"><code class="language-json">&lt;a href=<span class="token string">"helloworld"</span>>你好呀&lt;/a><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>然后当你点击这个<strong>你好呀</strong>的那一刻（我卡个时点）</p></blockquote><p>​    <strong>2.web.xml的拦截器拦截到了这个请求</strong></p><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>tenkinoko<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span> //拦截所有页面  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​        然后转到 tenkinoko 这个spring-mvc.xml文件</p><blockquote><p>在这个瞬间！</p></blockquote><p>​        由于 <strong>href=”helloword”</strong> 和我们 Helloworld.java文件中的**@RequestMapping(“/helloworld”)**达成了连携</p><blockquote><p>因此</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span>  String <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​        被执行了一遍，你可以在idea控制台发现输出了一个 Hello world ，细心的你发现了，他返回了一个 <strong>success</strong></p><p>​        这个 <strong>success</strong> 就是返回给 之前调用的 <strong>spring-mvc.xml</strong> 文件中的</p><blockquote> <!--视图解释器，进行页面的跳转--></blockquote><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewResolver<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/WEB-INF/views/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        格式是 <strong>prefix + 返回值 + .jsp</strong></p><p>​        因此由视图解释器的效果，页面会被跳转到——**/WEB-INF/views/succes.jsp** 这个文件！</p><h6 id="6-Hello-MVC"><a href="#6-Hello-MVC" class="headerlink" title="6.Hello MVC"></a>6.Hello MVC</h6><p><img src="http://ten.ranuxy.com/i/2021/06/23/go5lze.png"></p><blockquote><p>它会跳转到这个jsp文件</p></blockquote><pre class="line-numbers language-json"><code class="language-json">&lt;%--  Created by IntelliJ IDEA.  User<span class="token operator">:</span> Tenkinoko  Date<span class="token operator">:</span> <span class="token number">2021</span>/<span class="token number">6</span>/<span class="token number">22</span>  Time<span class="token operator">:</span> <span class="token number">21</span><span class="token operator">:</span><span class="token number">19</span>  To change this template use File | Settings | File Templates.--%>&lt;%@ page contentType=<span class="token string">"text/html;charset=UTF-8"</span> language=<span class="token string">"java"</span> %>&lt;html>&lt;head>    &lt;title>Title&lt;/title>    &lt;h1>Hello MVC&lt;/h1>&lt;/head>&lt;body>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>最终</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/23/gpc7cx.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>1.服务器启动，应用被加载。读取到web.xml中的配置创建spring容器并且初始化容器中的对象。</strong></p><p><strong>2.浏览器发送请求，被DispatherServlet捕获，该Servlet并不处理请求，而是把请求转发出去。转发的路径是根据请求URL，匹配@RequestMapping中的内容。</strong></p><p><strong>3.匹配到了后，执行对应方法。该方法有一个返回值。</strong></p><p><strong>4.根据方法的返回值，借助InternalResourceViewResolver找到对应的结果视图。</strong></p><p><strong>5.渲染结果视图，响应浏览器</strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring5 入门——Mybatis-Spring</title>
      <link href="posts/1015.html"/>
      <url>posts/1015.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="SM-整合"><a href="#SM-整合" class="headerlink" title="[SM] 整合"></a>[SM] 整合</h2><blockquote><p>简简单单的整合，简简单单的快乐</p></blockquote><p>步骤</p><ol><li>   导入相关jar包</li></ol><ul><li><p>junit</p></li><li><p>mybatis</p></li><li><p>mysql数据库</p></li><li><p>spring相关的</p></li><li><p>aop织入</p></li><li><p>mybatis-spring [new]</p><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--    Spring操作数酷 还学邀一个spring-jdbc--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ol start="2"><li><p>编写配置文件</p></li><li><p>测试</p></li></ol><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><ol><li><p>编写实体类</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>   <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//id</span>   <span class="token keyword">private</span> String name<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//姓名</span>   <span class="token keyword">private</span> String pwd<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//密码</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编写核心配置文件</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE configuration       PUBLIC "-//mybatis.org//DTD Config 3.0//EN"       "http://mybatis.org/dtd/mybatis-3-config.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.kuang.pojo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/mybatis?useSSL<span class="token punctuation">=</span>true&amp;amp;useUnicode<span class="token punctuation">=</span>true&amp;amp;characterEncoding<span class="token punctuation">=</span>utf8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.kuang.dao<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编写接口</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>   <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>编写Mapper.xml</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapper       PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"       "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.kuang.dao.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectUser<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from user   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>测试</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>   String resource <span class="token operator">=</span> <span class="token string">"mybatis-config.xml"</span><span class="token punctuation">;</span>   InputStream inputStream <span class="token operator">=</span> Resources<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>   SqlSessionFactory sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>   SqlSession sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   UserMapper mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   List<span class="token operator">&lt;</span>User<span class="token operator">></span> userList <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span>User user<span class="token operator">:</span> userList<span class="token punctuation">)</span><span class="token punctuation">{</span>       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>   sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>每次测试类都要去newSqlSessionFactory 纯度太低了 我选择把这些new对象的事情全权交给Spring</p></blockquote><h3 id="Spring-Mybatis-方式一"><a href="#Spring-Mybatis-方式一" class="headerlink" title="Spring+Mybatis(方式一)"></a>Spring+Mybatis(方式一)</h3><ol><li><p>编写数据源配置</p><p>之前的Mybatis核心文件可以留着</p><blockquote><p>创建spring-dao.xml</p><p>配置数据源        </p></blockquote><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--    DataSource 这里使用Spring提供的JDBC--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>datasource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.jdbc.datasource.DriverManagerDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClassName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/ssm?useUnicode<span class="token punctuation">=</span>true&amp;amp;useSSL<span class="token punctuation">=</span>false&amp;amp;characterEncoding<span class="token punctuation">=</span>utf8&amp;amp;serverTimezone<span class="token punctuation">=</span>UTC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>sqlSessionFactory</p><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!--配置SqlSessionFactory--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>datasource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--关联Mybatis--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:mybatis-config.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapperLocations<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:/mapper/UserMapper.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>sqlSessionTemplate</p><pre class="line-numbers language-xml"><code class="language-xml">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSession<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        只能只用构造器注入--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>需要给接口加实现类【注入Spring用】</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>joker<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>joker<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>support<span class="token punctuation">.</span>SqlSessionDaoSupport<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserMapperImpl2</span> <span class="token keyword">extends</span> <span class="token class-name">SqlSessionDaoSupport</span> <span class="token keyword">implements</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">AddUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span>String uname<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将自己写的实现类，注入到Spring中</p><blockquote><p>创建一个applicationContext.xml</p></blockquote><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spring-dao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> //引用spring-dao.xml的东西xml     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userMapper2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.joker.mapper.UserMapperImpl2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>   //注入到Spring<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>测试使用即可</p></li></ol><pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selsctUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ApplicationContext context <span class="token operator">=</span>                <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      UserMapper userMapper <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userMapper2"</span><span class="token punctuation">,</span> UserMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>User user <span class="token operator">:</span> userMapper<span class="token punctuation">.</span><span class="token function">selectUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring5 入门——①</title>
      <link href="posts/1013.html"/>
      <url>posts/1013.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Spring5-入门——①"><a href="#Spring5-入门——①" class="headerlink" title="Spring5 入门——①"></a>Spring5 入门——①</h1><blockquote><p>SSM的第一站，后端。。。很奇妙吧？</p></blockquote><h2 id="Spring-框架概述"><a href="#Spring-框架概述" class="headerlink" title="Spring 框架概述"></a>Spring 框架概述</h2><ol><li><strong>Spring</strong>是轻量级的开源的<strong>JAVAEE</strong>框架</li><li><strong>Spring</strong>可以解决企业应用开发的复杂性</li><li><strong>Spring</strong>有两个核心部分 AOP 和 IOC 容器<ul><li><strong>IOC</strong> ：控制反转，把创建对象交给Spring进行管理</li><li><strong>AOP</strong>：面向切面，不修改源代码进行功能增强</li></ul></li><li><strong>Spring</strong>特点<ol><li>方便解耦，简化开发</li><li>APP编程支持</li><li>方便程序测试</li><li>方便和其他框架进行整合</li><li>方便进行事务操作</li><li>降低API开发难度</li></ol></li><li><strong>Spring版本为5.x</strong></li></ol><h2 id="第一个Spring程序"><a href="#第一个Spring程序" class="headerlink" title="第一个Spring程序"></a>第一个Spring程序</h2><blockquote><p>第一个程序用的是JAVA项目</p><p>因为更好的上手 所以没用Maven项目</p><p>因此 可能会和Maven有点出入，但大体是一样的</p></blockquote><p><strong>1.下载Spring5</strong></p><ul><li><p>​    使用Spring的最新稳定版</p><p><img src="http://ten.ranuxy.com/i/2021/06/10/x8d77y.png"></p></li><li><p>​    下载地址</p><p><a href="https://repo.spring.io/release/org/springframework/spring/">https://repo.spring.io/release/org/springframework/spring/</a></p><p><img src="http://ten.ranuxy.com/i/2021/06/10/xd1wzv.jpg"></p><p>解压缩后：</p><p><img src="http://ten.ranuxy.com/i/2021/06/10/xdq1ks.png"></p></li></ul><p><strong>2.打开 idea 工具，创建普通 Java 工程</strong></p><p>​    <img src="http://ten.ranuxy.com/i/2021/06/10/xgrwgu.png"></p><p>​    <img src="http://ten.ranuxy.com/i/2021/06/10/xgrtk1.png"></p><p>​    <img src="http://ten.ranuxy.com/i/2021/06/10/xgruty.png"></p><p>​    <img src="http://ten.ranuxy.com/i/2021/06/10/xgs316.png">    </p><p><strong>3.导入 Spring 基本jar包</strong></p><blockquote><p>不是maven 没有直接在Pom.xml导入依赖</p><p>而是传统的导入jar包</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/10/xo735x.png"></p><blockquote><p>基础的Spring程序只需要上面四种jar包</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/10/xtow2n.png"></p><p><img src="http://ten.ranuxy.com/i/2021/06/10/xtozzt.png"></p><p><img src="http://ten.ranuxy.com/i/2021/06/10/xtp22i.png"></p><blockquote><p>除此之外 还有一个重要的jar包 <strong>日志包</strong></p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/10/xuvb4c.png"></p><p><a href="%22http://commons.apache.org/proper/commons-logging/download_logging.cgi%22">下载地址</a></p><blockquote><p>然后在新建的java项目下新建个lib文件夹，用来存储jar包</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/11/dtc02d.png"></p><blockquote><p>注入JAR包</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/06/11/dtai9b.png"></p><p><img src="http://ten.ranuxy.com/i/2021/06/11/dtfnt7.png"></p><blockquote><p>至此，Spring的前置已经做完了</p></blockquote><p><strong>4.创建个普通类</strong></p><p><img src="http://ten.ranuxy.com/i/2021/06/11/dxgtg7.png"></p><p><strong>5.创建Spring配置文件，在配置文件配置创建的对象</strong></p><p><img src="http://ten.ranuxy.com/i/2021/06/11/e0hdbh.png"></p><p><img src="http://ten.ranuxy.com/i/2021/06/11/e13f44.png"></p><p><strong>6.创建一个测试类，进行测试代码编写</strong></p><p><img src="http://ten.ranuxy.com/i/2021/06/11/f0btqj.png"></p><p><img src="http://ten.ranuxy.com/i/2021/06/11/f9pzj6.png"></p><blockquote><p>第一项是User这个类的内存地址<br>第二项是调用方法输出。</p></blockquote><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><blockquote><p>至此，第一个Spring程序结束了</p><p>后端，很奇妙吧？    ——2021.6.11</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet入门</title>
      <link href="posts/1020.html"/>
      <url>posts/1020.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Servlet入门-1"><a href="#Servlet入门-1" class="headerlink" title="Servlet入门-1"></a>Servlet入门-1</h1><h3 id="1-Servlet技术"><a href="#1-Servlet技术" class="headerlink" title="1.Servlet技术"></a>1.Servlet技术</h3><ul><li><p><strong>什么是Servlet</strong></p><ol><li>Servlet 是 JavaEE 规范之一。<strong>规范就是接口</strong></li><li>Servlet 是 JavaWeb 三大组件之一。三大组件分别是：Servlet程序，Filter过滤器,Listener监听器</li><li>Servlet 是运行在服务器上的一个java小程序，它可以接受客户端发送过来的</li></ol><p>请求，并响应给客户端</p></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/12/iii86c.png"></p><blockquote><p>手动实现 <strong>Servlet</strong> 程序</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">/*** service 方法是专门用来处理请求和响应的     * @param servletRequest      * @param servletResponse      * @throws ServletException      * @throws IOException */</span>     <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>                                 System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello Servlet 被访问了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                 <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>web.xml中的配置：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>                                                    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!-- servlet 标签给 Tomcat 配置 Servlet 程序 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!--servlet-name 标签 Servlet 程序起一个别名（一般是类名） --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!--servlet-class 是 Servlet 程序的全类名--></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>com.atguigu.servlet.HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--servlet-mapping 标签给 servlet 程序配置访问地址--></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--servlet-name 标签的作用是告诉服务器，我当前配置的地址给哪个 Servlet 程序使用--></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!--url-pattern 标签配置访问地址 &lt;br/> / 斜杠在服务器解析的时候，表示地址为：http://ip:port/工程路径 &lt;br/> /hello 表示地址为：http://ip:port/工程路径/hello &lt;br/> --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>常见的三种错误：</p><ol><li>url-pattern 中配置路径没有以“/“打头</li><li>servlet-name 配置的值不存在</li><li>servlet-class 标签的全类名配置错误</li></ol></blockquote><ul><li><p><strong>Servlet的生命周期</strong></p><ol><li><p>执行 Servlet 构造器方法</p></li><li><p>执行 init 初始化方法</p></li></ol></li></ul><p>第一，二步，是在第一次访问的时候创建 Servlet 程序会调用。</p><ol start="3"><li><p>执行 Service 方法<br>第三步，每次访问都会调用</p></li><li><p>执行 destroy 销毁方法<br>第四步，在web工程停止的时候调用</p></li></ol><ul><li><strong>GET和POST请求的分发处理</strong></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">/*** service 方法是专门用来处理请求和响应的     * @param servletRequest      * @param servletResponse      * @throws ServletException      * @throws IOException      */</span>     <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3 service === Hello Servlet 被访问了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// 类型转换（因为它有 getMethod()方法） </span>        HttpServletRequest httpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span> servletRequest<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// 获取请求的方式 </span>        String method <span class="token operator">=</span> httpServletRequest<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*** 做 get 请求的操作 */</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"get 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"get 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*** 做 post 请求的操作 */</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"post 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"post 请求"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>通过继承 HttpServlet 实现 Servlet程序</strong></li></ul><p>​        一般在实际项目开发中，都是使用继承 HttpServlet 类的方式去实现 Servlet 程序。</p><ol><li> 编写一个类去继承 HttpServlet 类</li><li>根据业务需要重写 doGet 或 doPost 方法</li><li>到web.xml中配置 Servlet 程序的访问地址</li></ol><p>Servlet 类的代码</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>类名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>到这个类的路径地址(**.**.**.类名）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>类名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>自定义标签名（/类名的简写)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>Servlet类的继承体系</strong></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/12/izpel7.png"></p><ul><li><p>**ServletConfig 类 **</p><blockquote><p>ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类。</p><p>Servlet 程序和 SercletConfig 对象都是由 Tomcat 负责创建，我们负责使用。<br>Servlet 程序默认是第一次访问的时候创捷， ServletConfig 是每个 Servlet 程序创建时，&gt;就创建一个对应的 ServletConfig 对象。</p></blockquote></li><li><p><strong>ServletConfig 类的三大作用</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯JAVA C组第十二次省赛总结</title>
      <link href="posts/1012.html"/>
      <url>posts/1012.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="第十二届蓝桥杯省赛总结"><a href="#第十二届蓝桥杯省赛总结" class="headerlink" title="第十二届蓝桥杯省赛总结"></a>第十二届蓝桥杯省赛总结</h1><p>​        为能更好的为比赛做准备，作出总结！</p><h5 id="关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：https-blog-csdn-net-GD-ONE-article-details-104061907"><a href="#关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：https-blog-csdn-net-GD-ONE-article-details-104061907" class="headerlink" title="关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：https://blog.csdn.net/GD_ONE/article/details/104061907"></a>关于蓝桥杯比赛知识点，网上已有人做出总结，也有其中的知识点讲解：<a href="https://blog.csdn.net/GD_ONE/article/details/104061907">https://blog.csdn.net/GD_ONE/article/details/104061907</a></h5><p>​        此总结给出练习题目的建议。</p><h2 id="一、洛谷题单"><a href="#一、洛谷题单" class="headerlink" title="一、洛谷题单"></a>一、洛谷题单</h2><p>​        洛谷推荐提单包含了从基础至进阶的题目，很有新手练至高手的价值。在这些提单中，重要的便是找到自己所不会的、不懂的进而练习，将各个知识点掌握。毕竟蓝桥杯比赛不是靠赌去猜题，同考试一样，唯有绝对的实力才能让自己游刃有余，我也建议每个学生做到这些，包括我自身。<strong>因此，建议通读上面链接的知识点，以此排查自己不会的或需加强锻炼的方面。</strong>以下以java为例子给出经验。</p><h2 id="二、练习方向"><a href="#二、练习方向" class="headerlink" title="二、练习方向"></a>二、练习方向</h2><p>​        首先，是最基础的语法问题，这是必要的，不需多说，看知识点即可。个人觉得java语法方面可注意自定义类的空值问题，即便是数组new出了数组的大小，此时每个元素也仍然是空值，因此数组需注意每个元素需要new出对象进行赋值。</p><p>​        学完了语法，我们仍然需要了解java各个常用实用的类，因为自己不可能还会将这些数据结构写一遍，在了解这些类之前，建议先了解数据结构的链表。因为很多数据结构都以链表基础发展过来，打个比喻，编程语言的语法是数学中的点，链表是线，通过线又能画出各种平面图形，其实很多其他数据结构都是链表的另外一种形式，个人认为树还处于一个复杂的平面结构，则图达到了立体的效果。</p><p>​        在了解了链表的基础上，可以通过刷相应的题来熟悉库中的类了，并在练习过程中会了解到其使用到的数据结构和算法，以此综合学习，我会根据上面链接的知识点慢慢<del>（摸鱼）</del>更新这方面的题目。可能会创个博客，又或直接挂洛谷的个人博客。</p><p>​        学完以上，便需要将其学精，能灵活运用各种算法和数据结构，这就需要刷更多的题了（你已经是个成熟的刷题人了，要学会自己找题）。</p><p>​        蓝桥杯C组省赛着重基础，因此参加省赛前基础是要学精的，不然估计省一无了，国赛未参加，不议。</p><p>​        通过这次的省赛，二叉树、图论是我的薄弱环节<del>（烂透，一题没做成）</del>，着重加强这两个数据结构的学习，其他算法和数据结构也不精，学完数据结构<del>（怪我寒假不认真，该补的还是要补回来）</del>，再各方面学精。</p><h2 id="三、学习建议"><a href="#三、学习建议" class="headerlink" title="三、学习建议"></a>三、学习建议</h2><p>​        练题目，不应是为AC而AC，而是从中掌握其知识点。学习时不能逞强，不会便是不会，直奔题解，还不懂直接问人，切忌硬刚题目，30分钟没思路直奔题解或问人，敲出自己的想法还不行也同样。记住，并非人人都是天才，我们是在学习，该不会的就去寻求帮助，学习他人，拓展自己的思路，闭门造车不可行。</p><p>​        </p><h1 id="题目练习篇-例子"><a href="#题目练习篇-例子" class="headerlink" title="题目练习篇(例子)"></a>题目练习篇(例子)</h1><h2 id="一、加速幂"><a href="#一、加速幂" class="headerlink" title="一、加速幂"></a>一、加速幂</h2><p>由于加速幂是我学的最精的了，又在协会做过讲解，第一篇文章就来讲加速幂。<br>这里加速幂分为三个部分：基础加速幂，矩阵加速幂和数列加速幂。</p><h3 id="基础加速幂"><a href="#基础加速幂" class="headerlink" title="基础加速幂"></a>基础加速幂</h3><p>首先来看一个2的19次幂的加速。</p><p><img src="http://ten.ranuxy.com/i/2021/05/06/gyha6n.png"></p><p>这是一个不断给总幂数二分，底数平方的过程。不多说，上代码讲解。</p><p>洛谷<strong>P1226 【模板】快速幂||取余运算</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> k <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">%</span>k<span class="token punctuation">;</span>                String end <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">"^"</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">" mod "</span> <span class="token operator">+</span> k <span class="token operator">+</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//下面循环是核心算法</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//幂数分完了即可退出循环</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断所剩幂数是否为奇数，是奇数就得乘以一次底数，不能丢失这个奇数幂。</span>            <span class="token punctuation">{</span>                ans <span class="token operator">=</span> ans<span class="token operator">*</span>a<span class="token operator">%</span>k<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            n<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//幂数二分并底数平方</span>            a<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token operator">%</span>k<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ans<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>            ans<span class="token operator">=</span><span class="token operator">-</span>ans<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>end<span class="token operator">+</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先以不会出现奇数次幂的16次幂为例，我们可以把16次幂分为2个8次幂，而后4个4次幂，接着8个2次幂，最后才是16个1次幂，简单的无奇数次幂的至此结束。</p><p>因此，最简单的就是如此不断将底数平方，平方一次便少一半幂数，直至幂数为零得出答案。</p><p>为保证数据通用，那奇数次幂当然得考虑。</p><p>以2的19次幂为例，19是一个奇数，直接二分会导致丢失一个幂数，因此在每个奇次幂数的时候由ans乘上一次底数。19÷2=9余1，不能丢失这个奇数幂。注意：并不是2的幂数才除以2，而是因为这是一个二分的过程才将幂数除以2，与开始的底数无关。</p><p>奇数与偶数次幂的结合，即得出这里的加速幂。</p><h3 id="矩阵加速幂"><a href="#矩阵加速幂" class="headerlink" title="矩阵加速幂"></a>矩阵加速幂</h3><p>​        建立在上面加速幂的基础上，先掌握基础加速幂的情况再看下面，不能理解的建议多多根据代码理解。我没学过矩阵，就根据我的想法理解矩阵。</p><p>​        求矩阵加速幂：设矩阵为A,那么便是快速的求出A的K次幂。</p><p>​        首先，来理解为什么矩阵能加速，基础加速幂是一个数的加速幂，很明显，将一个数看成1X1矩阵就行了。既然一阶矩阵能加速，那么其他阶的自然能行。</p><p>先理解两个概念：</p><ul><li>单位矩阵：左高右低对角线为1的矩阵，乘以任何矩阵都不变，对应一阶的1。</li><li>基础矩阵：所求A的K次幂的A。</li></ul><p>上代码讲解。</p><p>洛谷<strong>P3390 【模板】矩阵快速幂</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">long</span> mod <span class="token operator">=</span> <span class="token number">1000000000</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> m  <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//基础矩阵</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//单位矩阵</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//单位矩阵左高右低对角线为一</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                sq<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//加速幂算法</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//幂数分完停止</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans <span class="token operator">=</span> <span class="token function">mult</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分出一个奇数幂，不能丢失</span>                m<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>            <span class="token punctuation">{</span>                sq <span class="token operator">=</span> <span class="token function">mult</span><span class="token punctuation">(</span>sq<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//基础矩阵平方，对应底数的平方</span>                m<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>    <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>            <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//矩阵乘法运算</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">mult</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//遍历a的行    同时是c的行        </span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//遍历b的列  同时是c的列</span>            <span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//遍历a的列 遍历b的行</span>                <span class="token punctuation">{</span>                    c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> c<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>矩阵加速很简单，只是换成了矩阵的运算方法，相信在基础加速幂的基础上很容易理解。</p><p>重要的是弄懂那两个概念，理解不是问题。</p><h3 id="数列加速幂"><a href="#数列加速幂" class="headerlink" title="数列加速幂"></a>数列加速幂</h3><p>同样先理解上面的点。</p><p>此问题为求数列的第几项，如求斐波那契数列的第1883项。</p><p>可以从2的19次幂看出，无非是求2的n次幂这个等比数列的第19项，但是基础加速幂只能满足等比数列的求解，因此又有了其他数列的加速求解。</p><p>这里的加速是通过矩阵实现的，要矩阵加速便需要得知单位矩阵和基础矩阵，下面是求这两个矩阵的方法。</p><p>以斐波那契数列为</p><p>上代码。</p><p>洛谷<strong>P1962 斐波那契数列</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">long</span> mod <span class="token operator">=</span> <span class="token number">1000000007</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sq <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        n<span class="token operator">-=</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans<span class="token operator">=</span><span class="token function">mutl</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span>                n<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>             <span class="token punctuation">{</span>                sq<span class="token operator">=</span><span class="token function">mutl</span><span class="token punctuation">(</span>sq<span class="token punctuation">,</span>sq<span class="token punctuation">)</span><span class="token punctuation">;</span>                n<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">mutl</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">long</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> c<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟上一题没什么可改的，不同的就是需要自行求出单位矩阵和基础矩阵。</p><h3 id="自言自语"><a href="#自言自语" class="headerlink" title="自言自语"></a>自言自语</h3><p>熟练使用JAVA的API 省二起步，熟练图论的模板，省一get！</p><p>加入光荣的进化吧！</p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Idea-2021-1的破解方法</title>
      <link href="posts/1011.html"/>
      <url>posts/1011.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="IDEA大法好！"><a href="#IDEA大法好！" class="headerlink" title="IDEA大法好！"></a><del>IDEA大法好！</del></h1><blockquote><p>2021/4/28 当前IDEA最新版本是2021.1</p></blockquote><h3 id="一-下载安装"><a href="#一-下载安装" class="headerlink" title="一. 下载安装"></a>一. 下载安装</h3><ul><li><a href="https://www.jetbrains.com/idea/download/#section=windows">官网下载</a></li></ul><blockquote><p>我个人是下最新版，但破解方式可能会不同，得看你们自己搜寻（2021.1官方支持中文汉化插件了）</p></blockquote><ul><li><a href="https://pan.baidu.com/s/1kGwu5Lv3L8Y6UFEZF6OPXA">破解软件</a></li></ul><blockquote><p>目前（2021/4/28）新版本所有破解激活码都无效了（99年那种），这次是介绍一个无限重置试用期的插件</p></blockquote><blockquote><p>提取码↓</p></blockquote><pre><code>Z233</code></pre><blockquote><p><strong>原理简单来说就是通过重置clion的30天试用时间，插件会在在IDE窗口切出去或切回来时（窗口失去/得到焦点）会触发事件，检测是否长时间（超过25天）没有重置，给通知让你选择。（初次安装因为无法获取上次重置时间，会直接给予提示），同时本插件设置有auto按钮，*<em>Auto reset before per restart 如果勾选了，则自勾选后每次重启/退出IDE时会自动重置试用信息，你无需做额外的事情。（自动重置方式）无需再管，一劳永逸！*</em></strong></p></blockquote><h2 id="使用演示"><a href="#使用演示" class="headerlink" title="使用演示"></a>使用演示</h2><ul><li><p>先看看没安装插件的剩余试用时间 <strong>(如图所示 还有29天)</strong></p><p><img src="http://ten.ranuxy.com/i/2021/05/06/gws4i5.png"></p></li><li><p>下载上面的破解软件，<strong>不用解压缩！</strong>，直接拖入IDEA里面</p><p><img src="http://ten.ranuxy.com/i/2021/05/06/4p3rlep.png"></p></li><li><p>拖进去后，右下角会弹个正在安装的进度条，安装完后会提示安装完毕（如下图）</p></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gws21c.png"></p><ul><li>通过顶部工具栏 <strong>help -&gt; Eval reset</strong>调出插件的试用界面</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gws9w0.png"></p><ul><li><p>插件试用界面调出来后我们可以看到右下角如下所示，有一个自动勾选框</p><blockquote><p>勾选 1 后 点击 2 就成功了<br><img src="http://ten.ranuxy.com/i/2021/05/06/gwsa16.png"></p></blockquote></li><li><p>你的试用期就又时光回溯为30天了，自此，就<strong>永远无法到达过期的事实</strong></p></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gwsd4z.png"></p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p><em><strong>现在这种插件重置方式比补丁激活的方式更香，官方无法封杀！！！只是通过重置了使用信息来保障我们可以一直用下去。也不存在法律上的问题（并没有破解他的软件，我们使用的还是正版。只不过是通过自动方式代替了繁琐的手动卸载重装操作而已）。现在又可以安心的码代码了！</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的下载,安装,配置</title>
      <link href="posts/1010.html"/>
      <url>posts/1010.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://zhuanlan.zhihu.com/p/26920622#:~:text=3.MySQL%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%20MySQL%E6%98%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%8C%E8%83%BD%E5%A4%9F%E5%B8%AE%E5%8A%A9%E4%BD%A0%E7%AE%A1%E7%90%86%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%98%AF%E5%BC%80%E6%BA%90%E7%9A%84%EF%BC%8C%E6%84%8F%E5%91%B3%E7%9D%80%E8%BF%99%E6%98%AF%E5%85%8D%E8%B4%B9%E7%9A%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%BF%85%E8%A6%81%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E4%BF%AE%E6%94%B9%E6%BA%90%E4%BB%A3%E7%A0%81%E3%80%82%20%E5%B0%BD%E7%AE%A1MySQL%E6%98%AF%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B9%B0%E7%A4%BE%E5%8C%BA%E7%89%88%E6%89%8D%E8%83%BD%E5%BE%97%E5%88%B0%E4%B8%93%E9%A1%B9%E6%9C%8D%E5%8A%A1%E3%80%82%20MySQL%20%E5%AF%B9%E6%AF%94Oracle%E5%92%8C%20SQL,server%20%E6%9C%89%E9%9D%9E%E5%B8%B8%E5%A4%A7%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%82%20.%20MySQL%20%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%87%A0%E4%B9%8E%E6%89%80%E6%9C%89%E5%B9%B3%E5%8F%B0%E4%B8%8A%E8%BF%90%E8%90%A5UNIX%2C%20Linux%2C%20Windows%EF%BC%8C%E5%B0%8F%E5%88%B0%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84pc%E4%B8%AD%EF%BC%8C%E8%80%8C%E4%B8%94%EF%BC%8C%E5%8F%AF%E9%9D%A0%EF%BC%8C%E5%8F%AF%E6%8B%93%E5%B1%95%EF%BC%8C%E8%BF%90%E8%A1%8C%E9%80%9F%E5%BA%A6%E9%A3%9E%E5%BF%AB%E3%80%82">Mysql是什么？</a><br><strong>为什么要学mysql？</strong><br><strong>·</strong>  它是你学<strong>web</strong>的一个<strong>前置科技</strong>(huaji)<br><strong>·</strong>  方便好用<br><strong>·</strong>  现在大数据时代不学几个数据库迟早被淘汰。     </p><h1 id="Mysql-下载，安装"><a href="#Mysql-下载，安装" class="headerlink" title="Mysql 下载，安装"></a>Mysql 下载，安装</h1><h3 id="1-mysql官方下载"><a href="#1-mysql官方下载" class="headerlink" title="1.mysql官方下载"></a>1.<a href="https://downloads.mysql.com/archives/community">mysql官方下载</a></h3><h3 id="2-软协稳定版下载包"><a href="#2-软协稳定版下载包" class="headerlink" title="2.软协稳定版下载包"></a>2.<a href="https://pan.baidu.com/s/1p1e_8EeUaE2mYcPl2t5Dfg">软协稳定版下载包</a></h3><blockquote><p>提取码:2333</p></blockquote><h1 id="Mysql-安装和配置"><a href="#Mysql-安装和配置" class="headerlink" title="Mysql 安装和配置"></a>Mysql 安装和配置</h1><h3 id="1-解压"><a href="#1-解压" class="headerlink" title="1.解压"></a>1.解压</h3><blockquote><p>解压文件时候注意你的路径不能是中文！（跟安装steam游戏库一个道理</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/fnvgh9.png"></p><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h3><blockquote><p>点击我的电脑(此电脑-)&gt;鼠标右键点击-&gt; 左键点击我的属性-&gt;点击高级系统设置-&gt;点击环境变量。</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/foqg5y.png"></p><ul><li>点击系统变量下的<strong>path</strong></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fpxgyq.png"></p><ul><li>然后新建一个变量 填写解压后的mysql下的bin的路径</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fpxml2.png"></p><h3 id="3-编辑mysql配置文件"><a href="#3-编辑mysql配置文件" class="headerlink" title="3.编辑mysql配置文件"></a>3.编辑mysql配置文件</h3><p><img src="https://riyugo.com/i/2021/04/27/12f8u6z.png"></p><blockquote><p>然后后右键用记事本打开也好，vscode打开也好 ,总之要进去编辑。</p></blockquote><pre class="line-numbers language-c"><code class="language-c"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span>D<span class="token punctuation">:</span>\mysql\mysql<span class="token number">-5.7</span><span class="token punctuation">.</span><span class="token number">28</span>\datadir<span class="token operator">=</span>D<span class="token punctuation">:</span>\mysql\mysql<span class="token number">-5.7</span><span class="token punctuation">.</span><span class="token number">28</span>\data\port<span class="token operator">=</span><span class="token number">3306</span>skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables #跳过权限验证的 就是初始化的时候用的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意</strong>！<img src="http://ten.ranuxy.com/i/2021/05/06/fpyjyu.png"></p><p>编辑的路径要是你自己解压mysql的路径</p><p>复制上述代码黏贴到ini文件上保存</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/fr59os.png"></p><h3 id="4-开始初始化安装"><a href="#4-开始初始化安装" class="headerlink" title="4.开始初始化安装"></a>4.开始初始化安装</h3><ul><li>切换到mysql的bin目录下，在路径输入cmd<blockquote><p>如果不是默认管理员模式的话要先启动管理员CMD模式，再用cd命令切换到mysql的bin目录下<img src="http://ten.ranuxy.com/i/2021/05/06/frea84.png"></p></blockquote></li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fre7kf.png"></p><ul><li>然后输入安装命令 <strong>mysqld -install</strong> 命令</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/fty3ns.png"></p><ul><li>然后输入 <strong>mysqld –initialize-insecure –user=mysql</strong> 初始化数据文件，再尝试下面代码是否可行。</li></ul><blockquote><p>net start mysql  #mysql启动命令<br>net stop mysql   # mysql 停止命令</p></blockquote><p><img src="http://ten.ranuxy.com/i/2021/05/06/gt198z.png"></p><h3 id="5-登录与修改密码"><a href="#5-登录与修改密码" class="headerlink" title="5.登录与修改密码"></a>5.登录与修改密码</h3><ul><li>顺利完成上面的步骤后，恭喜你 你已经可以在<strong>cmd启动mysql</strong>了</li></ul><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>用CMD启动：</p><blockquote><pre class="line-numbers language-c"><code class="language-c">#输入mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p # 输完后按回车（密码可以暂且为空 之前我们在配置文件里加了一行跳过权限验证的）。# 出现输入的 直接回车即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><ul><li>注意:要先输入<strong>net start mysql</strong> 启动mysql服务后再输入</li></ul><p><img src="http://ten.ranuxy.com/i/2021/05/06/gtijv1.png"></p><blockquote><p>现在就进入了mysql了！</p></blockquote><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><pre><code>update mysql.user set authentication_string=password('123456') where user='root' and Host = 'localhost';</code></pre><ul><li>当然只是修改密码是不会生效的 还要刷新权限</li></ul><pre><code>flush privileges;</code></pre><ul><li>最后最后 一定要记得要重启mysql 才能生效的，不然mysql是不会认的你的。</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="http://ten.ranuxy.com/i/2021/05/06/gtoexo.png"></p><p><strong>恭喜你，点亮了web的前置科技，加入光荣的进化吧！少年！</strong></p><blockquote><p>如果你以前安装过的话，需要重装的话，一定一定要把环境清理干净。</p><p>安装了mysql服务 接下来就要安装一个 <strong>数据库可视化操作的软件</strong>啦。协会制式可视化软件是 <strong>Navicat Premium 12</strong>，你想用其他的也可以</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高僧斗法（NIM）</title>
      <link href="posts/undefined.html"/>
      <url>posts/undefined.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>#问题描述</p><hr><p>古时丧葬活动中经常请高僧做法事。仪式结束后，有时会有“高僧斗法”的趣味节目，以舒缓压抑的气氛。</p><p>　　节目大略步骤为：先用粮食（一般是稻米）在地上“画”出若干级台阶（表示N级浮屠）。又有若干小和尚随机地“站”在某个台阶上。最高一级台阶必须站人，其它任意。</p><p>　　两位参加游戏的法师分别指挥某个小和尚向上走任意多级的台阶，但会被站在高级台阶上的小和尚阻挡，不能越过。两个小和尚也不能站在同一台阶，也不能向低级台阶移动。</p><p>　　两法师轮流发出指令，最后所有小和尚必然会都挤在高段台阶，再也不能向上移动。轮到哪个法师指挥时无法继续移动，则游戏结束，该法师认输。</p><p>　　对于已知的台阶数和小和尚的分布位置，请你计算先发指令的法师该如何决策才能保证胜出。</p><p>##输入格式</p><hr><p>　　输入数据为一行用空格分开的N个整数，表示小和尚的位置。台阶序号从1算起，所以最后一个小和尚的位置即是台阶的总数。（N&lt;100, 台阶总数&lt;1000）</p><hr><p>##输出格式<br>　　输出为一行用空格分开的两个整数: A B, 表示把A位置的小和尚移动到B位置。若有多个解，输出A值较小的解，若无解则输出-1。</p><p>##样例输入</p><p>1 5 9</p><p>##样例输出</p><p>1 4</p><p>##样例输入</p><p>1 5 8 10</p><p>##样例输出</p><p>1 3</p><p>题解看注释，对NIm游戏不熟悉的移步<a href="https://www.bilibili.com/video/BV17U4y1s777?p=92">NIM游戏</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>     String A<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//字符串输入</span>    String<span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token operator">=</span> A<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//以空格为分割点</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">int</span> <span class="token punctuation">[</span>str<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//转化为整数</span>    <span class="token punctuation">}</span>    <span class="token function">sovle</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解释函数</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sovle</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//遍历从第一个位置到第二个位置</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//枚举所有移动步数</span>        <span class="token punctuation">{</span>            <span class="token keyword">int</span> old<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存放没有移动的位置</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>k<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//尝试</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">slim</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>old<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//找到解就结束程序</span>            <span class="token punctuation">}</span>                    <span class="token keyword">finally</span> <span class="token punctuation">{</span>                        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>old<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//没有解就回溯</span>                                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// TODO: handle exception</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">slim</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//Nim模板</span>    <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ans<span class="token operator">^=</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
